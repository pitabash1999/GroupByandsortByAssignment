package com.assignment1.service;

import java.util.Optional;

import org.springframework.stereotype.Service;

import com.assignment1.dto.SaveRecordRequest;
import com.assignment1.dto.SavedResponseDto;
import com.assignment1.model.Dataset;
import com.assignment1.model.Record;
import com.assignment1.model.ResponseMessage;
import com.assignment1.repository.DatasetRepository;
import com.assignment1.repository.RecordRepository;
import com.assignment1.service.interfaces.GroupbySortByMethods;

import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

@NoArgsConstructor
@AllArgsConstructor
@Service
public class GroupbySortByMethodsImpl implements GroupbySortByMethods {
	
	private DatasetRepository datasetRepository;
	private RecordRepository recordRepository;
	
	
    @Override
    public SavedResponseDto saveRecord(String dataset, SaveRecordRequest request) {
    	
    	Optional<Dataset> existingDataset=datasetRepository.findBydatasetName(dataset);
    	
    	if(existingDataset.isPresent()) {
    		Record record=new Record();
    		record.setName(request.getName());
    		record.setAge(request.getAge());
    		record.setDeparment(request.getDepartment());
    		record.setDatasetId(existingDataset.get().getId());
    		Record savedRecord=recordRepository.save(record);
    		
    		return responseDto(savedRecord.getId(), dataset, ResponseMessage.SUCCESS.getMessage());
    	}else {
    		Dataset savedDataset=datasetRepository.save(dataset);
    		Record record=new Record();
    		record.setName(request.getName());
    		record.setAge(request.getAge());
    		record.setDeparment(request.getDepartment());
    		record.setDatasetId(savedDataset.getId());
    		Record savedRecord=recordRepository.save(record);
    		
    		return responseDto(savedRecord.getId(), dataset, ResponseMessage.SUCCESS.getMessage());
    	}
    }
    
    private SavedResponseDto responseDto(Long recordId,String datasetName,String message) {
    	
    	return SavedResponseDto.builder()
    			.message(message)
    			.dataset(datasetName)
    			.recordId(recordId)
    			.build();
    	
    }
}
